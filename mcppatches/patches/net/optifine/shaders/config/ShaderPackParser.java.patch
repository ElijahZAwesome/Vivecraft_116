--- a/net/optifine/shaders/config/ShaderPackParser.java
+++ b/net/optifine/shaders/config/ShaderPackParser.java
@@ -258,7 +258,7 @@
         String s = "profile.";
         List<ShaderProfile> list = new ArrayList<>();
 
-        for (String s1 : props.keySet())
+        for (String s1 : (Set<String>)(Set<?>)props.keySet())
         {
             if (s1.startsWith(s))
             {
@@ -291,7 +291,7 @@
         Pattern pattern = Pattern.compile("program\\.([^.]+)\\.enabled");
         Map<String, IExpressionBool> map = new HashMap<>();
 
-        for (String s1 : props.keySet())
+        for (String s1 : (Set<String>)(Set<?>)props.keySet())
         {
             Matcher matcher = pattern.matcher(s1);
 
@@ -763,7 +763,7 @@
         Map<String, IExpression> map = new HashMap<>();
         List<CustomUniform> list = new ArrayList<>();
 
-        for (String s4 : props.keySet())
+        for (String s4 : (Set<String>)(Set<?>)props.keySet())
         {
             String[] astring = Config.tokenize(s4, ".");
 
@@ -858,7 +858,7 @@
 
     public static void parseAlphaStates(Properties props)
     {
-        for (String s : props.keySet())
+        for (String s : (Set<String>)(Set<?>)props.keySet())
         {
             String[] astring = Config.tokenize(s, ".");
 
@@ -929,7 +929,7 @@
 
     public static void parseBlendStates(Properties props)
     {
-        for (String s : props.keySet())
+        for (String s : (Set<String>)(Set<?>)props.keySet())
         {
             String[] astring = Config.tokenize(s, ".");
 
@@ -1011,7 +1011,7 @@
 
     public static void parseRenderScales(Properties props)
     {
-        for (String s : props.keySet())
+        for (String s : (Set<String>)(Set<?>)props.keySet())
         {
             String[] astring = Config.tokenize(s, ".");
 
@@ -1075,7 +1075,7 @@
 
     public static void parseBuffersFlip(Properties props)
     {
-        for (String s : props.keySet())
+        for (String s : (Set<String>)(Set<?>)props.keySet())
         {
             String[] astring = Config.tokenize(s, ".");
 
