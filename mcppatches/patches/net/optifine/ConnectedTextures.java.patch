--- a/net/optifine/ConnectedTextures.java
+++ b/net/optifine/ConnectedTextures.java
@@ -2304,7 +2304,7 @@
             }
         }
 
-        ConnectedProperties[] aconnectedproperties1 = list.toArray(new ConnectedProperties[list.size()]);
+        ConnectedProperties[] aconnectedproperties1 = (ConnectedProperties[]) list.toArray(new ConnectedProperties[list.size()]);
         Set set1 = new HashSet();
         Set set = new HashSet();
 
@@ -2327,17 +2327,17 @@
         return !set1.isEmpty();
     }
 
-    private static ConnectedProperties[][] propertyListToArray(List list)
+    private static ConnectedProperties[][] propertyListToArray(List listp)
     {
-        ConnectedProperties[][] aconnectedproperties = new ConnectedProperties[list.size()][];
+        ConnectedProperties[][] aconnectedproperties = new ConnectedProperties[listp.size()][];
 
-        for (int i = 0; i < list.size(); ++i)
+        for (int i = 0; i < listp.size(); ++i)
         {
-            List list = (List)list.get(i);
+            List list = (List)listp.get(i);
 
             if (list != null)
             {
-                ConnectedProperties[] aconnectedproperties1 = list.toArray(new ConnectedProperties[list.size()]);
+                ConnectedProperties[] aconnectedproperties1 = (ConnectedProperties[]) list.toArray(new ConnectedProperties[list.size()]);
                 aconnectedproperties[i] = aconnectedproperties1;
             }
         }
@@ -2401,15 +2401,15 @@
             list.add((Object)null);
         }
 
-        List list = (List)list.get(id);
+        List sublist = (List)list.get(id);
 
-        if (list == null)
+        if (sublist == null)
         {
-            list = new ArrayList();
-            list.set(id, list);
+            sublist = new ArrayList();
+            list.set(id, sublist);
         }
 
-        list.add(cp);
+        sublist.add(cp);
     }
 
     private static String[] getDefaultCtmPaths()
@@ -2430,7 +2430,7 @@
             addDefaultLocation(list, "textures/block/" + s + "_stained_glass.png", s1 + "_glass_" + s + "/glass_pane_" + s + ".properties");
         }
 
-        return list.toArray(new String[list.size()]);
+        return (String[]) list.toArray(new String[list.size()]);
     }
 
     private static void addDefaultLocation(List list, String locBase, String pathSuffix)
